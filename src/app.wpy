<style lang="less">
@import "./static/zanui/index.wxss";
@import "./static/weui.less";
@import "./static/custom.less";
page {
  background-color: #f8f8f8;
  font-size: 16px;
  font-family: -apple-system-font, Helvetica Neue, Helvetica, sans-serif;
}
.page__hd {
  padding: 40px;
}
.page__bd {
  padding-bottom: 40px;
}
.page__bd_spacing {
  padding-left: 15px;
  padding-right: 15px;
}
.page__ft {
  padding-bottom: 10px;
  text-align: center;
}
.page__title {
  text-align: left;
  font-size: 20px;
  font-weight: 400;
}
.page__desc {
  margin-top: 5px;
  color: #888888;
  text-align: left;
  font-size: 14px;
}
</style>
<template>
  <view class="container page">
  </view>
</template>
<script>
import wepy from "wepy";
import "wepy-async-function";
import service from "@/mixins/service";
export default class app extends wepy.app {
  config = {
    pages: [
      "pages/workbench/inkpad/blue/index" //打印机管理
    ],
    window: {
      backgroundTextStyle: "light",
      navigationBarBackgroundColor: "#004a9f",
      navigationBarTitleText: "WeChat",
      navigationBarTextStyle: "white"
    }
  };
  globalData = {
    userInfo: null
  };
  constructor() {
    super();
    this.use("requestfix");
    this.intercept("request", {
      config(p) {
        p.timestamp = +new Date();
        const userInfo = this.globalData.userInfo;
        if (userInfo && p.data) {
          p.data.ucId = userInfo.ucId || "";
          p.data.tk = userInfo.token || "";
        }
        return p;
      },
      success(p) {
        //console.log("request success");
        return p;
      },
      fail(p) {
        //console.log("request error");
        return p;
      }
    });
  }
  onLaunch() {
    wx.setStorageSync("userInfo", null);
  }
  async getUserInfo(cb) {
    const userInfo = this.globalData.userInfo;
    if (userInfo) {
      cb && cb(userInfo);
      return userInfo;
    } else {
      wepy.login({
        success: res => {
          console.log("登录成功 code 为：" + res.code);
          if (res.code) {
            service.fetchUserInfo(res.code).then(res => {
              const { code, data } = res.data;
              if (res.statusCode == 200 && code == 3001) {
                wx.setStorageSync("thirdSessionId", data);
                service.getUserInfo((res, success) => {
                  if (success) {
                    wx.setStorageSync("encryptedData", res.encryptedData);
                    wx.setStorageSync("iv", res.iv);
                    service.getDecryptionData((res, success) => {
                      if (success) {
                        this.globalData.userInfo = res.data.data;
                        cb && cb(res.data.data);
                      } else {
                        console.log("解密数据失败");
                      }
                    });
                  } else {
                    console.log("获取用户信息失败");
                  }
                });
              } else if (res.statusCode == 200 && code == 200) {
                this.globalData.userInfo = data;
                wx.setStorageSync("userInfo", data);
                cb && cb(data);
              } else {
                console.log("通过 code 获取第三方服务器 session 失败");
              }
            });
          } else {
            console.log("登录失败:");
          }
        }
      });
    }
  }
}
</script>
